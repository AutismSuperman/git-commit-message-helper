# setting configurable
setting.configurable.template=提交模版
# setting central panel
setting.central.type.panel.title=Type 显示样式设置
setting.central.type.style=Type显示样式:
setting.central.type.number=Type选择模式显示数量:
setting.central.type.number.tooltip=设置-1可以显示所有type
setting.central.type.combobox.button=下拉
setting.central.type.radio.button=选择
setting.central.type.mixing.button=混合
setting.central.skip.ci.panel.title=Skip CI 设置
setting.central.skip.ci.enable.default=默认值:
setting.central.skip.ci.enable.selection=开启下拉:
setting.central.skip.ci.enable.checkbox=开启
setting.central.skip.ci.default.checked.checkbox=默认勾选
setting.central.hidden.panel.title=隐藏设置
# setting template panel
setting.description=个性化 git 提交类型和模版
setting.template.description=模版说明:
setting.template.preview=预览:
setting.template.edit=设置 git 提交模版:
setting.template.restore.defaults=重置为默认
# setting tabbed
setting.tabbed.panel.type=类型
setting.tabbed.panel.template=模版
# setting template description
setting.template.description.tip=在文件模板中，可以使用文本、代码、注释和预定义的变量<br>以下提供了预定义变量的列表
setting.template.description.predefined.tip=预定义变量列表如下:
setting.template.description.type=对应提交菜单“提交类型”
setting.template.description.scope=对应提交菜单“此次变更的范围”
setting.template.description.subject=对应提交菜单“简短描述”
setting.template.description.body=对应提交菜单“详细描述”
setting.template.description.changes=对应提交菜单“重大变更”
setting.template.description.closes=对应提交菜单“关闭问题”
setting.template.description.skip.ci=对应提交菜单“Skip CI”
setting.template.description.newLine='\n' 的转义字符，代表是否换行
setting.template.description.used=模版已使用
# setting alias panel
setting.alias.add.title=新增类型
setting.alias.edit.title=修改类型
setting.alias.field.title=类型
setting.alias.field.description=描述
# commit panel
commit.panel.type.field=更改类型:
commit.panel.scope.field=此次变更的范围:
commit.panel.subject.field=简短描述:
commit.panel.body.field=详细描述:
commit.panel.changes.field=重大变更:
commit.panel.closes.field=关闭问题:
commit.panel.skip.ci.checkbox=批准
commit.panel.title=提交
commit.panel.ok.button=提交
commit.panel.cancel.button=取消
# init git commit type description
feat.description=新功能
fix.description=错误修复
docs.description=修改文档
style.description=格式修改（不影响功能，例如空格、分号等格式修正）
refactor.description=代码重构
perf.description=代码优化
test.description=新增测试
build.description=构建依赖更改
ci.description=更改 CI 配置文件或者脚本
chore.description=更改构建流程、或者增加依赖库、工具等
revert.description=代码回退